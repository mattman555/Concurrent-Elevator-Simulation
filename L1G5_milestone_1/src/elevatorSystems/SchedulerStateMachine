/**
 * 
 */
package elevatorSystems.schedulerStateMachine;

import java.util.List;
import java.util.Map.Entry;
import elevatorSystems.Direction;
import elevatorSystems.Elevator;
import elevatorSystems.Request;
import elevatorSystems.Scheduler;

/**
 * @author Ambar Mendez Jimenez 
 * @author Kevin Belanger 101121709

 *
 */
public class AwaitingRequests extends SchedulerState {

	private Scheduler scheduler; 
	private Elevator elevator; 
	private int currLocation;
	
	

	public AwaitingRequests(Scheduler scheduler, Elevator elevator ) {
		this.scheduler = scheduler;
		this.elevator = elevator;
	}
	
	public void getLocation() {
 		currLocation= elevator.getElevatorLocation();
    }
	/*
	@Override
	public void getListOfRequests(List<Request> requests) {
		System.out.println("Receiving the requests");
		this.scheduler.addRequest(requests);
		
	}
	
	@Override
	public void RequestTask(Entry<Integer,Direction> destination) {
		System.out.println("Elevator Requests Task");
		//not finished 
	}
	*/
}
